{"_id":"PWuRgCQZE6PQqgup","name":"Share Image Via URL","type":"script","author":"LvkxNSKi1EveADjw","img":"icons/svg/upgrade.svg","scope":"global","command":"/**\n * Share an image to all players when you have an image URL\n * Author: @Krishmero#1792\n */\n\nlet imagePopup = (imageUrl) => {\n\t// Display the image popout and share it.\n\tconst ip = new ImagePopout(imageUrl);\n\tip.render(true);\n\tip.shareImage();\n};\n\nlet chatDialog = (imageUrl) => {\n\tChatMessage.create({\n\t\tuser: game.user._id,\n\t\tcontent: `<img src=\"${imageUrl}\" />`,\n\t\ttype: CONST.CHAT_MESSAGE_TYPES.OOC\n\t});\n};\n\nlet selectOptions = game.user.isGM ? `\n<div style=\"display: inline-block; width: 100%; margin-bottom: 10px\">\n\t<label for=\"output-options\" style=\"margin-right: 10px\">Output Options:</label>\n\t<select id=\"output-options\" />\n\t\t<option value=\"popup\">Popup</option>\n\t\t<option value=\"chat\">Chat</option>\n\t\t<option value=\"both\">Both</option>\n\t</select>\n</div>\n<br />\n` : '';\n\nnew Dialog({\n\ttitle: `Share Image via URL`,\n\tcontent: `\n\t\t<form>\n\t\t\t${selectOptions}\n\t\t\t<div style=\"display: flex; width: 100%; margin-bottom: 10px\">\n\t\t\t\t<label for=\"image-url\" style=\"white-space: nowrap; margin-right: 10px; padding-top:4px\">Image URL:</label>\n\t\t\t\t<input type=\"text\" id=\"image-url\" name=\"image-url\" />\n\t\t\t</div>\n\t\t</form>\n\t`,\n\tbuttons: {\n\t\tyes: {\n\t\t\ticon: \"<i class='fas fa-check'></i>\",\n\t\t\tlabel: `Share`,\n\t\t\tcallback: (html) => {\n\t\t\t\tlet imageUrl = html.find('#image-url').val();\n\t\t\t\tlet permission = html.find('select#output-options')[0]?.value || null;\n\t\t\t\tif (!imageUrl) {\n\t\t\t\t\treturn ui.notifications.info(\"You did not provide a valid image.\");\n\t\t\t\t}\n\t\t\t\tif (game.user.isGM && ['popup', 'both'].includes(permission)) {\n\t\t\t\t\timagePopup(imageUrl);\n\t\t\t\t}\n\t\t\t\tif (!game.user.isGM || ['chat', 'both'].includes(permission)) {\n\t\t\t\t\tchatDialog(imageUrl);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tno: {\n\t\t\ticon: \"<i class='fas fa-times'></i>\",\n\t\t\tlabel: `Cancel`\n\t\t},\n\t},\n\tdefault: \"yes\"\n}).render(true)","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"core":{"sourceId":"Compendium.foundry_community_macros.community-macros-misc.mPIqhwFL3h5W9d2t"},"combat-utility-belt":{"macroTrigger":""},"scene-packer":{"sourceId":"Compendium.world.minhas-macros.S1WkOutguoHTqzPX"},"cf":{"id":"temp_wy3kfso72pb","color":"#000000"}}}
{"_id":"bbl4li1VhLSBZWXr","name":"Change Token Vision","type":"script","author":"LvkxNSKi1EveADjw","img":"moulinette/images/gameicons/eye-target-%23ffffff-transparent.svg","scope":"global","command":"// Open a dialog for quickly changing token vision parameters of the controlled tokens.\n// This macro was written by @Sky#9453\n// https://github.com/Sky-Captain-13/foundry\n\nif (canvas.tokens.controlled.length === 0)\n  return ui.notifications.error(\"Please select a token first\");\n\nlet applyChanges = false;\nnew Dialog({\n  title: `Token Vision Configuration`,\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Vision Type:</label>\n        <select id=\"vision-type\" name=\"vision-type\">\n          <option value=\"nochange\">No Change</option>\n          <option value=\"dim0\">Self</option>\n          <option value=\"dim30\">Darkvision (30 ft)</option>\n          <option value=\"dim60\">Darkvision (60 ft)</option>\n          <option value=\"dim90\">Darkvision (90 ft)</option>\n          <option value=\"dim120\">Darkvision (120 ft)</option>\n          <option value=\"dim150\">Darkvision (150 ft)</option>\n          <option value=\"dim180\">Darkvision (180 ft)</option>\n          <option value=\"bright120\">Devil's Sight (Warlock)</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Light Source:</label>\n        <select id=\"light-source\" name=\"light-source\">\n          <option value=\"nochange\">No Change</option>\n          <option value=\"none\">None</option>\n          <option value=\"candle\">Candle</option>\n          <option value=\"lamp\">Lamp</option>\n          <option value=\"bullseye\">Lantern (Bullseye)</option>\n          <option value=\"hooded-dim\">Lantern (Hooded - Dim)</option>\n          <option value=\"hooded-bright\">Lantern (Hooded - Bright)</option>\n          <option value=\"light\">Light (Cantrip)</option>\n          <option value=\"torch\">Torch</option>\n        </select>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: `Apply Changes`,\n      callback: () => applyChanges = true\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: `Cancel Changes`\n    },\n  },\n  default: \"yes\",\n  close: html => {\n    if (applyChanges) {\n      for ( let token of canvas.tokens.controlled ) {\n        let visionType = html.find('[name=\"vision-type\"]')[0].value || \"none\";\n        let lightSource = html.find('[name=\"light-source\"]')[0].value || \"none\";\n        let dimSight = 0;\n        let brightSight = 0;\n        let dimLight = 0;\n        let brightLight = 0;\n        let lightAngle = 360;\n        let lockRotation = token.data.lockRotation;\n        // Get Vision Type Values\n        switch (visionType) {\n          case \"dim0\":\n            dimSight = 0;\n            brightSight = 0;\n            break;\n          case \"dim30\":\n            dimSight = 30;\n            brightSight = 0;\n            break;\n          case \"dim60\":\n            dimSight = 60;\n            brightSight = 0;\n            break;\n          case \"dim90\":\n            dimSight = 90;\n            brightSight = 0;\n            break;\n          case \"dim120\":\n            dimSight = 120;\n            brightSight = 0;\n            break;\n          case \"dim150\":\n            dimSight = 150;\n            brightSight = 0;\n            break;\n          case \"dim180\":\n            dimSight = 180;\n            brightSight = 0;\n            break;\n          case \"bright120\":\n            dimSight = 0;\n            brightSight= 120;\n            break;\n          case \"nochange\":\n          default:\n            dimSight = token.data.dimSight;\n            brightSight = token.data.brightSight;\n        }\n        // Get Light Source Values\n        switch (lightSource) {\n          case \"none\":\n            dimLight = 0;\n            brightLight = 0;\n            break;\n          case \"candle\":\n            dimLight = 10;\n            brightLight = 5;\n            break;\n          case \"lamp\":\n            dimLight = 45;\n            brightLight = 15;\n            break;\n          case \"bullseye\":\n            dimLight = 120;\n            brightLight = 60;\n            lockRotation = false;\n            lightAngle = 52.5;\n            break;\n          case \"hooded-dim\":\n            dimLight = 5;\n            brightLight = 0;\n            break;\n          case \"hooded-bright\":\n            dimLight = 60;\n            brightLight = 30;\n            break;\n          case \"light\":\n            dimLight = 40;\n            brightLight = 20;\n            break;\n          case \"torch\":\n            dimLight = 40;\n            brightLight = 20;\n            break;\n          case \"nochange\":\n          default:\n            dimLight = token.data.dimLight;\n            brightLight = token.data.brightLight;\n            lightAngle = token.data.lightAngle;\n            lockRotation = token.data.lockRotation;\n        }\n        // Update Token\n        console.log(token);\n        token.update({\n          vision: true,\n          dimSight: dimSight,\n          brightSight: brightSight,\n          dimLight: dimLight,\n          brightLight:  brightLight,\n          lightAngle: lightAngle,\n          lockRotation: lockRotation\n        });\n      }\n    }\n  }\n}).render(true);","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"core":{"sourceId":"Compendium.advanced-macros.macros.zEOWQFblsTskw7jX"},"combat-utility-belt":{"macroTrigger":""},"scene-packer":{"sourceId":"Compendium.world.minhas-macros.KieQ3cnVRxZGpc1H"},"cf":{"id":"temp_wy3kfso72pb","color":"#000000"}}}
{"_id":"fa7eKdxGld74sFYA","name":"End Turn","type":"script","author":"LvkxNSKi1EveADjw","img":"icons/svg/cancel.svg","scope":"global","command":"/*\nAuthor: willisrocks\nDescription: \n\nEnds the current actors turn in a combat encounter. Useful when you don't pop out your combat tracker\nand want to end the turn from your hotbar.\n\nIf the user is a gamemaster, it will always end the current turn. For players, it will only end \nthe turn when the current actor in the turn order is owned by you. \n\nBased on the work of reddit user serrag97: https://www.reddit.com/r/FoundryVTT/comments/j1b8gs/next_turn_shortcut/\n*/\n\nmain()\n\nasync function main() {\n    try {\n        // If you have the Gamemaster role, you can advance\n        // the turn for any actor\n        const isGM = game.users.get(game.userId).hasRole(4);\n        if (isGM) {\n            game.combats.active.nextTurn();\n        }\n        else {\n            for(let token of canvas.tokens.controlled) {\n                if(token.id === game.combats.active.current.tokenId) {\n                    game.combats.active.nextTurn();\n                    return;\n                }\n            }\n\n            ui.notifications.info('As a player you can only advance your turn');\n        }\n\n        return;\n    } catch(e) {\n        ui.notifications.error(e);\n        return;\n    }\n}","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"core":{"sourceId":"Macro.EPdQjOlpTWwBKx9e"},"combat-utility-belt":{"macroTrigger":""},"scene-packer":{"sourceId":"Compendium.world.minhas-macros.xUBy5CYZtgZLVxXq"},"cf":{"id":"temp_wy3kfso72pb","color":"#000000"}}}
{"_id":"geW12Ns19n4TR7xq","name":"Rollagem Geral","type":"script","author":"LvkxNSKi1EveADjw","img":"icons/svg/d20.svg","scope":"global","command":"// Click on a token and fire away!\n(async ()=>{\nlet me = canvas.tokens.controlled[0].actor;\nlet ability_short_name = Object.keys(CONFIG.DND5E.abilities);\nlet ability_full_name = Object.values(CONFIG.DND5E.abilities);\nlet skill_short_name = Object.keys(CONFIG.DND5E.skills);\nlet skill_full_name = Object.values(CONFIG.DND5E.skills);\nlet get_tools = me.itemTypes.tool;\nlet abilityOptions = \"\";\nlet skillOptions = \"\";\nlet toolOptions = \"\";\nfor(let i = 0; i < ability_short_name.length; i++) {\nlet sname = ability_short_name[i];\nlet fname = ability_full_name[i];\n abilityOptions +=`<option value=\"${sname}\">${fname}</option>`;\n}\nfor(let i = 0; i < skill_short_name.length; i++) {\nlet sname = skill_short_name[i];\nlet fname = skill_full_name[i];\n skillOptions +=`<option value=\"${sname}\">${fname}</option>`;\n}\nfor(let i = 0; i < get_tools.length; i++) {\nlet tool = get_tools[i];\n toolOptions +=`<option value=\"${tool.name}\">${tool.name}</option>`;\n}\n\nnew Dialog({\n\ttitle: \"Actor Roller\",\n\tcontent: `<p>What would you like to roll?</p>`,\n\tbuttons: {\n        ability: { label: \"Ability\", callback: () => {\n            ability_roller();\n            }},\n         save: { label: \"Save\", callback: () => {\n            save_roller();\n            }},    \n        skill: { label: \"Skill\", callback: () => {\n            skill_roller();\n            }},\n        tool: { label: \"Tool\", callback: () => {\n            tool_roller();\n            }}\n    }\n}).render(true);\n\nfunction ability_roller(){\nlet the_content = `<form class=\"flexcol\"><div class=\"form-group\"><p>Pick a stat to roll.</p><select id=\"abilities\">${abilityOptions}</select></div></form>`;\nnew Dialog({\n\ttitle: \"Ability Check\",\n\tcontent: the_content,\n\tbuttons: {\n\t\troll: {label: \"Roll\", callback: (html) => {\n\t\t    let testAbility = html.find('#abilities')[0].value;\n\t\t    me.rollAbilityTest(testAbility);\n\t\t}}\n\t}\n}).render(true);\n}\n\nfunction save_roller(){\nlet the_content = `<form class=\"flexcol\"><div class=\"form-group\"><p>Pick a stat to roll.</p><select id=\"abilities\">${abilityOptions}</select></div></form>`;\nnew Dialog({\n\ttitle: \"Ability Check\",\n\tcontent: the_content,\n\tbuttons: {\n\t\troll: {label: \"Roll\", callback: (html) => {\n\t\t    let testAbility = html.find('#abilities')[0].value;\n\t\t    me.rollAbilitySave(testAbility);\n\t\t}}\n\t}\n}).render(true);\n}\n\n\nfunction skill_roller(){\nlet the_content = `<form class=\"flexcol\"><div class=\"form-group\"><p>Pick a skill to roll.</p><select id=\"skills\">${skillOptions}</select></div></form>`;\nnew Dialog({\n\ttitle: \"Skill Check\",\n\tcontent: the_content,\n\tbuttons: {\n\t\troll: {label: \"Roll\", callback: (html) => {\n\t\t    let testAbility = html.find('#skills')[0].value;\n\t\t    me.rollSkill(testAbility);\n\t\t}}\n    }\n}).render(true);\n}\n\nfunction tool_roller(){\nlet the_content = `<form class=\"flexcol\"><div class=\"form-group\"><p>Pick a tool to roll.</p><select id=\"tools\">${toolOptions}</select></div></form>`;\nnew Dialog({\n\ttitle: \"Tool Check\",\n\tcontent: the_content,\n\tbuttons: {\n        roll: { label: \"Roll\", callback: (html) => {\n            let testTool = html.find('#tools')[0].value;\n            me.items.find(i=> i.name === testTool).rollToolCheck();\n        }}\n    }\n}).render(true);    \n}\n\n})();","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.eullyN5DueJCSjCM"},"scene-packer":{"sourceId":"Compendium.world.minhas-macros.fkUk7D5fibGbFCYt"},"cf":{"id":"temp_wy3kfso72pb","color":"#000000"}}}
{"_id":"i39zqVr7cdDgnfki","name":"Open Moulinette Forge","type":"script","author":"LvkxNSKi1EveADjw","img":"moulinette/images/gameicons/anvil-impact-%23ffffff-transparent.svg","scope":"global","command":"// possible tabs: \"gameicons\", \"imagesearch\", \"prefabs\", \"scenes\", \"sounds\", \"tiles\" \nconst tab = \"tiles\" \nconst forgeClass = game.moulinette.modules.find(m => m.id == \"forge\").class\nnew forgeClass(tab).render(true)","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"core":{"sourceId":"Compendium.moulinette-core.moulinette-macros.oXz3LPK4hhUbbzoP"},"combat-utility-belt":{"macroTrigger":""},"scene-packer":{"sourceId":"Compendium.world.minhas-macros.VsNv6CKlk6uDkPRL"},"cf":{"id":"temp_wy3kfso72pb","color":"#000000"}}}
{"_id":"jYIlnLdY6uoWl5WR","name":"DM Shield","type":"script","author":"LvkxNSKi1EveADjw","img":"icons/svg/mage-shield.svg","scope":"global","command":"window['gm-screen'].toggleGmScreenVisibility();","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.SY1BtqNZsROSRRM3"},"scene-packer":{"sourceId":"Compendium.world.minhas-macros.uRtQOzBWc7wQnor2"},"cf":{"id":"temp_wy3kfso72pb","color":"#000000"}}}
{"name":"#[CF_tempEntity]","type":"chat","author":"LvkxNSKi1EveADjw","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"cf":{"id":"temp_wy3kfso72pb","folderPath":[],"color":"#000000","fontColor":"#FFFFFF","name":"Toolbar","children":[],"icon":""}},"_id":"rc8LNtgFZKiIDH2X"}
{"_id":"rpfDa7BYQr7t4rlA","name":"Calendar","type":"script","author":"LvkxNSKi1EveADjw","img":"moulinette/images/gameicons/calendar-%23ffffff-transparent.svg","scope":"global","command":"SimpleCalendar.show();","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.v0vqTOrvfJqeBvfC"},"scene-packer":{"sourceId":"Compendium.world.minhas-macros.NmaG66SAPD5KbYOC"},"cf":{"id":"temp_wy3kfso72pb","color":"#000000"}}}
{"_id":"tnbfZnfRrMY3sxY4","name":"Scene performance","type":"script","author":"LvkxNSKi1EveADjw","img":"moulinette/images/gameicons/stopwatch-%23ffffff-transparent.svg","scope":"global","command":"ScenePacker.ShowPerformanceReport();","folder":null,"sort":0,"permission":{"default":0,"LvkxNSKi1EveADjw":3},"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.Ef9UXWUQVNTQTNQG"},"scene-packer":{"sourceId":"Compendium.world.minhas-macros.jY9z0avi9rGF6U1t"},"cf":{"id":"temp_wy3kfso72pb","color":"#000000"}}}
